initSidebarItems({"constant":[["STORAGE_PREFIX","Local storage prefix used by the Offchain Worker API to"]],"enum":[["Capability","Execution context extra capabilities."],["HttpError","An error enum returned by some http methods."],["HttpRequestStatus","Status of the HTTP request"],["OffchainOverlayedChange","Change to be applied to the offchain worker db in regards to a key."],["StorageKind","A type of supported crypto."]],"mod":[["http","A high-level helpers for making HTTP requests from Offchain Workers."],["storage","A set of storage helpers for offchain workers."],["storage","In-memory implementation of offchain workers database."],["storage_lock","Off-chain Storage Lock"],["testing","Utilities for offchain calls testing."]],"struct":[["Capabilities","A set of capabilities"],["Duration","Duration type"],["HttpRequestId","Opaque type for offchain http requests."],["KeyTypeId","An identifier for a type of cryptographic key."],["LimitedExternalities","An `OffchainExternalities` implementation with limited capabilities."],["OffchainExt","The offchain extension that will be registered at the Substrate externalities."],["OpaqueMultiaddr","Simple blob to hold a `Multiaddr` without committing to its format."],["OpaqueNetworkState","A blob to hold information about the local nodeâ€™s network state without committing to its format."],["Timestamp","Opaque timestamp type"],["TransactionPoolExt","An externalities extension to submit transactions to the pool."]],"trait":[["Externalities","An extended externalities for offchain workers."],["OffchainStorage","Offchain workers local storage."],["TransactionPool","Abstraction over transaction pool."]]});